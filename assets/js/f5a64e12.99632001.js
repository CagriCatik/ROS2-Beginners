"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3953],{9088:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"node-settings/declare-parameter","title":"Declaring Parameters in ROS 2","description":"Declaring parameters within your nodes is a crucial step in ROS 2 development. This section explains how to declare parameters and demonstrates why it is essential to declare them within the node code.","source":"@site/docs/06_node-settings/03_declare-parameter.md","sourceDirName":"06_node-settings","slug":"/node-settings/declare-parameter","permalink":"/ROS2-Beginners/docs/node-settings/declare-parameter","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/06_node-settings/03_declare-parameter.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parameter","permalink":"/ROS2-Beginners/docs/node-settings/parameter"},"next":{"title":"get-parameter-py","permalink":"/ROS2-Beginners/docs/node-settings/get-parameter-py"}}');var s=r(4848),t=r(8453);const i={},l="Declaring Parameters in ROS 2",c={},d=[{value:"Python Example",id:"python-example",level:2},{value:"C++ Example",id:"c-example",level:2},{value:"Setting Parameter Values",id:"setting-parameter-values",level:3},{value:"Using Parameters in Node Logic",id:"using-parameters-in-node-logic",level:3},{value:"Python Example",id:"python-example-1",level:2},{value:"C++ Example",id:"c-example-1",level:2},{value:"Conclusion",id:"conclusion",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"declaring-parameters-in-ros-2",children:"Declaring Parameters in ROS 2"})}),"\n",(0,s.jsx)(n.p,{children:"Declaring parameters within your nodes is a crucial step in ROS 2 development. This section explains how to declare parameters and demonstrates why it is essential to declare them within the node code."}),"\n",(0,s.jsx)(n.h2,{id:"python-example",children:"Python Example"}),"\n",(0,s.jsxs)(n.p,{children:["Let's start with a Python node. Assume we have a node named ",(0,s.jsx)(n.code,{children:"number_publisher"}),"."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Modify the Node to Declare a Parameter:"})}),"\n",(0,s.jsxs)(n.p,{children:["Edit the ",(0,s.jsx)(n.code,{children:"number_publisher.py"})," file to declare a new parameter in the node's constructor."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import rclpy\nfrom rclpy.node import Node\n\nclass NumberPublisher(Node):\n    def __init__(self):\n        super().__init__('number_publisher')\n        self.declare_parameter('test_param', 0)  # Declare a parameter named 'test_param'\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = NumberPublisher()\n    rclpy.spin(node)\n    node.destroy_node()\n    rclpy.shutdown()\n\nif __name__ == '__main__':\n    main()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, the parameter ",(0,s.jsx)(n.code,{children:"test_param"})," is declared with a default value of ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compile and Run the Node:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"colcon build --packages-select <your_package_name>\nsource install/setup.bash\nros2 run <your_package_name> number_publisher\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Check the Parameter:"})}),"\n",(0,s.jsx)(n.p,{children:"Use the command line to list and get the parameter values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ros2 param list\nros2 param get /number_publisher test_param\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This should display the parameter ",(0,s.jsx)(n.code,{children:"test_param"})," with its default value."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"c-example",children:"C++ Example"}),"\n",(0,s.jsx)(n.p,{children:"Similarly, for a C++ node:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Modify the Node to Declare a Parameter:"})}),"\n",(0,s.jsxs)(n.p,{children:["Edit the ",(0,s.jsx)(n.code,{children:"number_publisher.cpp"})," file to declare a new parameter in the node's constructor."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include "rclcpp/rclcpp.hpp"\n\nclass NumberPublisher : public rclcpp::Node\n{\npublic:\n    NumberPublisher() : Node("number_publisher")\n    {\n        this->declare_parameter<int>("test_param", 0);  // Declare a parameter named \'test_param\'\n    }\n};\n\nint main(int argc, char * argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared<NumberPublisher>();\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compile and Run the Node:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"colcon build --packages-select <your_package_name>\nsource install/setup.bash\nros2 run <your_package_name> number_publisher\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Check the Parameter:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ros2 param list\nros2 param get /number_publisher test_param\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"setting-parameter-values",children:"Setting Parameter Values"}),"\n",(0,s.jsxs)(n.p,{children:["Parameters can be set using the command line tool ",(0,s.jsx)(n.code,{children:"ros2 param"}),". This section demonstrates how to set parameter values and verify them."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Set a Parameter Value:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ros2 param set /number_publisher test_param 42\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This sets the parameter ",(0,s.jsx)(n.code,{children:"test_param"})," to ",(0,s.jsx)(n.code,{children:"42"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Verify the Parameter Value:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ros2 param get /number_publisher test_param\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This should return the value ",(0,s.jsx)(n.code,{children:"42"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"using-parameters-in-node-logic",children:"Using Parameters in Node Logic"}),"\n",(0,s.jsx)(n.p,{children:"After declaring and setting parameters, you can use them in your node logic. Here's how to read parameter values within the node."}),"\n",(0,s.jsx)(n.h2,{id:"python-example-1",children:"Python Example"}),"\n",(0,s.jsxs)(n.p,{children:["Modify the ",(0,s.jsx)(n.code,{children:"NumberPublisher"})," class to read the parameter value and use it in the logic."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import rclpy\nfrom rclpy.node import Node\n\nclass NumberPublisher(Node):\n    def __init__(self):\n        super().__init__('number_publisher')\n        self.declare_parameter('test_param', 0)\n        test_param_value = self.get_parameter('test_param').get_parameter_value().integer_value\n        self.get_logger().info(f'Test Param Value: {test_param_value}')\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = NumberPublisher()\n    rclpy.spin(node)\n    node.destroy_node()\n    rclpy.shutdown()\n\nif __name__ == '__main__':\n    main()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This example reads the parameter ",(0,s.jsx)(n.code,{children:"test_param"})," and logs its value."]}),"\n",(0,s.jsx)(n.h2,{id:"c-example-1",children:"C++ Example"}),"\n",(0,s.jsxs)(n.p,{children:["Modify the ",(0,s.jsx)(n.code,{children:"NumberPublisher"})," class to read the parameter value and use it in the logic."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include "rclcpp/rclcpp.hpp"\n\nclass NumberPublisher : public rclcpp::Node\n{\npublic:\n    NumberPublisher() : Node("number_publisher")\n    {\n        this->declare_parameter<int>("test_param", 0);\n        int test_param_value = this->get_parameter("test_param").as_int();\n        RCLCPP_INFO(this->get_logger(), "Test Param Value: %d", test_param_value);\n    }\n};\n\nint main(int argc, char * argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared<NumberPublisher>();\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This example reads the parameter ",(0,s.jsx)(n.code,{children:"test_param"})," and logs its value."]}),"\n",(0,s.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial covered the essential aspects of working with parameters in ROS 2, including declaring parameters within nodes, setting parameter values using the command line, and utilizing parameters within node logic. By following these practices, you can effectively manage parameters in your ROS 2 applications, ensuring robust and flexible node configurations."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var a=r(6540);const s={},t=a.createContext(s);function i(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);