"use strict";(self.webpackChunkROS2_Beginners=self.webpackChunkROS2_Beginners||[]).push([[4452],{9346:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"project/intro","title":"Beginner Projects","description":"1. Introductory Project: TurtleSim Controller","source":"@site/docs/09_project/01_intro.md","sourceDirName":"09_project","slug":"/project/intro","permalink":"/ROS2-Beginners/docs/project/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/09_project/01_intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Projects","permalink":"/ROS2-Beginners/docs/category/projects"},"next":{"title":"TurtleSim Controller","permalink":"/ROS2-Beginners/docs/project/turtlesim_controller"}}');var t=r(4848),i=r(8453);const o={},l="Beginner Projects",c={},d=[{value:"1. <strong>Introductory Project: TurtleSim Controller</strong>",id:"1-introductory-project-turtlesim-controller",level:2},{value:"2. <strong>Basic Service Project: Light Controller</strong>",id:"2-basic-service-project-light-controller",level:2},{value:"3. <strong>Custom Interfaces Project: Sensor Data Processor</strong>",id:"3-custom-interfaces-project-sensor-data-processor",level:2},{value:"4. <strong>Parameterized Node: Robot Speed Controller</strong>",id:"4-parameterized-node-robot-speed-controller",level:2},{value:"5. <strong>Launch Files Project: Multi-Node System</strong>",id:"5-launch-files-project-multi-node-system",level:2},{value:"6. <strong>Debugging Project: ROS 2 Node Monitor</strong>",id:"6-debugging-project-ros-2-node-monitor",level:2},{value:"7. <strong>Integrated Project: Autonomous TurtleSim Navigator</strong>",id:"7-integrated-project-autonomous-turtlesim-navigator",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"beginner-projects",children:"Beginner Projects"})}),"\n",(0,t.jsxs)(n.h2,{id:"1-introductory-project-turtlesim-controller",children:["1. ",(0,t.jsx)(n.strong,{children:"Introductory Project: TurtleSim Controller"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Control the TurtleSim node using ROS 2."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Write a Python publisher to move the turtle using keyboard input."}),"\n",(0,t.jsx)(n.li,{children:"Create a subscriber node to read and log the turtle's position."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Topics, Publishers, Subscribers."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"2-basic-service-project-light-controller",children:["2. ",(0,t.jsx)(n.strong,{children:"Basic Service Project: Light Controller"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Create a system to turn a virtual light ON/OFF using a custom service."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Define a custom service with ",(0,t.jsx)(n.code,{children:"bool"})," request and response."]}),"\n",(0,t.jsx)(n.li,{children:"Implement a service server node to toggle the light."}),"\n",(0,t.jsx)(n.li,{children:"Create a client node to send service requests."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Services, Service Server/Client."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"3-custom-interfaces-project-sensor-data-processor",children:["3. ",(0,t.jsx)(n.strong,{children:"Custom Interfaces Project: Sensor Data Processor"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Simulate sensor data streaming and processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Define a custom message for sensor data (e.g., temperature, humidity)."}),"\n",(0,t.jsx)(n.li,{children:"Create a publisher node to publish simulated sensor data."}),"\n",(0,t.jsx)(n.li,{children:"Implement a subscriber node to process and log the data."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Custom Messages, Publishers, Subscribers."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"4-parameterized-node-robot-speed-controller",children:["4. ",(0,t.jsx)(n.strong,{children:"Parameterized Node: Robot Speed Controller"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Control a robot's speed dynamically using parameters."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create a node that reads a parameter (speed) on startup."}),"\n",(0,t.jsx)(n.li,{children:"Implement parameter declaration and dynamic updating."}),"\n",(0,t.jsx)(n.li,{children:"Simulate robot movement using the updated speed value."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Parameters, Node Settings."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"5-launch-files-project-multi-node-system",children:["5. ",(0,t.jsx)(n.strong,{children:"Launch Files Project: Multi-Node System"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Automate the startup of multiple nodes using launch files."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Write launch files to start a publisher and subscriber node together."}),"\n",(0,t.jsx)(n.li,{children:"Include parameters in the launch file for dynamic configuration."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Launch Files, Node Configuration."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"6-debugging-project-ros-2-node-monitor",children:["6. ",(0,t.jsx)(n.strong,{children:"Debugging Project: ROS 2 Node Monitor"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Monitor and debug nodes in a running ROS 2 system."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Launch nodes in the TurtleSim simulation."}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"rqt_graph"})," and debugging tools to inspect node interactions."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Debugging Tools."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"7-integrated-project-autonomous-turtlesim-navigator",children:["7. ",(0,t.jsx)(n.strong,{children:"Integrated Project: Autonomous TurtleSim Navigator"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objective"}),": Create a simple autonomous navigation system for TurtleSim."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use topics to publish velocity commands."}),"\n",(0,t.jsx)(n.li,{children:"Use services to reset the turtle's position."}),"\n",(0,t.jsx)(n.li,{children:"Utilize parameters to define navigation constraints."}),"\n",(0,t.jsx)(n.li,{children:"Automate node launches using a launch file."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concepts Applied"}),": Topics, Services, Parameters, Launch Files."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);