"use strict";(self.webpackChunkROS2_Beginners=self.webpackChunkROS2_Beginners||[]).push([[4773],{1404:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"intro/setup","title":"Setting Up and Sourcing ROS 2 Environment","description":"The Robot Operating System (ROS) 2 is an open-source framework widely used in robotics research and industry. It provides tools and libraries to build complex robotic applications. This tutorial aims to provide a detailed and accurate guide on how to set up and source the ROS 2 environment to ensure it functions correctly in your terminal sessions.","source":"@site/docs/01_intro/03_setup.md","sourceDirName":"01_intro","slug":"/intro/setup","permalink":"/ROS2-Beginners/docs/intro/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/01_intro/03_setup.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installing ROS 2 Humble","permalink":"/ROS2-Beginners/docs/intro/install"},"next":{"title":"Launching Your First ROS 2 Program","permalink":"/ROS2-Beginners/docs/intro/launch"}}');var i=t(4848),r=t(8453);const o={},c="Setting Up and Sourcing ROS 2 Environment",a={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Understanding ROS 2 Environment Setup",id:"understanding-ros-2-environment-setup",level:2},{value:"Step-by-Step Guide",id:"step-by-step-guide",level:2},{value:"1. Locating the Setup Script",id:"1-locating-the-setup-script",level:3},{value:"2. Sourcing the Setup Script",id:"2-sourcing-the-setup-script",level:3},{value:"3. Persistent Environment Setup",id:"3-persistent-environment-setup",level:3},{value:"Verifying the Setup",id:"verifying-the-setup",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"setting-up-and-sourcing-ros-2-environment",children:"Setting Up and Sourcing ROS 2 Environment"})}),"\n",(0,i.jsx)(n.p,{children:"The Robot Operating System (ROS) 2 is an open-source framework widely used in robotics research and industry. It provides tools and libraries to build complex robotic applications. This tutorial aims to provide a detailed and accurate guide on how to set up and source the ROS 2 environment to ensure it functions correctly in your terminal sessions."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ROS 2 Installation"}),": Ensure you have installed ROS 2. For this tutorial, we will assume you have installed the Foxy Fitzroy distribution."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Basic Linux Knowledge"}),": Familiarity with terminal commands and basic shell operations."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"understanding-ros-2-environment-setup",children:"Understanding ROS 2 Environment Setup"}),"\n",(0,i.jsx)(n.p,{children:"When you install ROS 2, it includes several scripts necessary for setting up the environment. These scripts are essential to configure your terminal session to recognize and use ROS 2 commands and tools."}),"\n",(0,i.jsx)(n.h2,{id:"step-by-step-guide",children:"Step-by-Step Guide"}),"\n",(0,i.jsx)(n.h3,{id:"1-locating-the-setup-script",children:"1. Locating the Setup Script"}),"\n",(0,i.jsx)(n.p,{children:"The setup script for ROS 2 is typically located in the ROS 2 installation directory. For the Foxy distribution, you can find it at:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"/opt/ros/foxy/setup.bash\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-sourcing-the-setup-script",children:"2. Sourcing the Setup Script"}),"\n",(0,i.jsx)(n.p,{children:"To use ROS 2 commands in your terminal, you need to source the setup script. Sourcing a script means executing the script in the current shell session, setting up the necessary environment variables."}),"\n",(0,i.jsx)(n.p,{children:"Run the following command in your terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source /opt/ros/foxy/setup.bash\n"})}),"\n",(0,i.jsx)(n.p,{children:"After executing this command, the ROS 2 environment will be configured for your current terminal session."}),"\n",(0,i.jsx)(n.h3,{id:"3-persistent-environment-setup",children:"3. Persistent Environment Setup"}),"\n",(0,i.jsxs)(n.p,{children:["Sourcing the setup script manually each time you open a new terminal can be tedious. To automate this process, you can add the sourcing command to your ",(0,i.jsx)(n.code,{children:"~/.bashrc"})," file. The ",(0,i.jsx)(n.code,{children:"~/.bashrc"})," file is executed every time a new terminal session is started, ensuring the ROS 2 environment is automatically configured."]}),"\n",(0,i.jsxs)(n.p,{children:["Follow these steps to add the sourcing command to your ",(0,i.jsx)(n.code,{children:"~/.bashrc"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open your ",(0,i.jsx)(n.code,{children:"~/.bashrc"})," file in a text editor. You can use any text editor you prefer, such as ",(0,i.jsx)(n.code,{children:"nano"})," or ",(0,i.jsx)(n.code,{children:"vim"}),". For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nano ~/.bashrc\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Scroll to the end of the file and add the following line:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source /opt/ros/foxy/setup.bash\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Save the file and exit the text editor. If you're using ",(0,i.jsx)(n.code,{children:"nano"}),", you can do this by pressing ",(0,i.jsx)(n.code,{children:"CTRL + X"}),", then ",(0,i.jsx)(n.code,{children:"Y"}),", and ",(0,i.jsx)(n.code,{children:"ENTER"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To apply the changes immediately, source the ",(0,i.jsx)(n.code,{children:"~/.bashrc"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source ~/.bashrc\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"After performing these steps, every new terminal session will automatically source the ROS 2 setup script, ensuring the environment is configured correctly."}),"\n",(0,i.jsx)(n.h2,{id:"verifying-the-setup",children:"Verifying the Setup"}),"\n",(0,i.jsx)(n.p,{children:"To verify that your setup is correct and the ROS 2 environment is properly sourced, open a new terminal and run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ros2 --help\n"})}),"\n",(0,i.jsx)(n.p,{children:"If the command returns a help message with available ROS 2 commands, your setup is successful. If you encounter an error, double-check the paths and ensure the setup script is correctly sourced."}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(n.p,{children:["Sourcing the ROS 2 setup script is a crucial step to ensure that your terminal environment is configured to use ROS 2 tools and commands. By adding the sourcing command to your ",(0,i.jsx)(n.code,{children:"~/.bashrc"})," file, you can automate this process, enhancing your workflow efficiency. This tutorial has provided a detailed and accurate guide to setting up and sourcing the ROS 2 environment, adhering to the scientific and technical standards expected in the field of robotics."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);